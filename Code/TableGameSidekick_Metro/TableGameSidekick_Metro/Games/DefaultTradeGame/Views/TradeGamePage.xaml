<common:LayoutAwarePage
    xmlns:cmd="using:MVVMSidekick.Commands"   
    xmlns:model="using:TableGameSidekick_Metro.Games.DefaultTradeGame.Views.ViewModels"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TableGameSidekick_Metro.Games.DefaultTradeGame.Views"
    xmlns:common="using:MVVMSidekick.Views"
    
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"    
    x:Name="page"
    x:Class="TableGameSidekick_Metro.Games.DefaultTradeGame.Views.TradeGamePage"    
    mc:Ignorable="d"     
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Mode=Self}}"
    >
    
    <!--DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Mode=Self}}"-->
    <common:LayoutAwarePage.DefaultViewModel>
        <model:TradeGamePage_Model/>
    </common:LayoutAwarePage.DefaultViewModel>
    <!--<Page.DataContext>
        <Binding Path="DefaultViewModel">
            
            <Binding.RelativeSource>
                <RelativeSource Mode="Self" ></RelativeSource>
            </Binding.RelativeSource>
        </Binding></Page.DataContext>-->

        <!--<cmd:CommandBinder.CommandBinder >
        <cmd:CommandBinder  EventName="Loaded" Command="{Binding DefaultViewModel.CommandOnLoadCommand, ElementName=page, Mode=OneWay}"></cmd:CommandBinder>
    </cmd:CommandBinder.CommandBinder>-->

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Background="Gray" Style="{StaticResource LayoutRootStyle}"  DataContext="{Binding DefaultViewModel, ElementName=page}" >
        <Grid.RowDefinitions>
            
            <RowDefinition Height="*"/>
			<RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="primaryColumn" Width="1*"/>
            <ColumnDefinition Width=".8*"/>
            <ColumnDefinition Width=".8*"/>
        </Grid.ColumnDefinitions>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscapeOrWide"/>

                <!-- Filled uses a simpler list format in a narrower column -->
                <VisualState x:Name="FilledOrNarrow">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="primaryColumn" Storyboard.TargetProperty="Width">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="420"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemListView" Storyboard.TargetProperty="ItemTemplate">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Standard80ItemTemplate}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!--
                    The page respects the narrower 100-pixel margin convention for portrait, and the page
                    initially hides details to show only the list of items
                -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemListView" Storyboard.TargetProperty="Padding">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="100,0,90,60"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!--
                    When an item is selected in portrait the details display requires more extensive changes:
                     * Hide the master list and the column is was in
                     * Move item details down a row to make room for the title
                     * Move the title directly above the details
                     * Adjust margins and padding for details
                 -->
                <VisualState x:Name="FullScreenPortrait_Detail">
                    <Storyboard>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="primaryColumn" Storyboard.TargetProperty="Width">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemListView" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!--
                    The back button and title have different styles when snapped, and the page
                    initially hides details to show only the list of items
                -->
                <VisualState x:Name="Snapped">
                    <Storyboard>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="primaryColumn" Storyboard.TargetProperty="Width">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="320"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemListView" Storyboard.TargetProperty="ItemTemplate">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Standard80ItemTemplate}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemListView" Storyboard.TargetProperty="Padding">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="20,0,0,0"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!--
                    When snapped and an item is selected the details display requires more extensive changes:
                     * Hide the master list and the column is was in
                     * Move item details down a row to make room for the title
                     * Move the title directly above the details
                     * Adjust margins and padding for details
                     * Use a different font for title and subtitle
                     * Adjust margins below subtitle
                 -->
                <VisualState x:Name="Snapped_Detail">
                    <Storyboard>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="primaryColumn" Storyboard.TargetProperty="Width">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemListView" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <!-- Back button and page title -->

        <!-- Vertical scrolling item list -->
        <ListView
            x:Name="itemListView"    
            TabIndex="1"
         
            Padding="0,0,0,0"
            ItemsSource="{Binding GameData.PlayersData}"
            IsSwipeEnabled="False"
            SelectionChanged="ItemListView_SelectionChanged"
       SelectionMode="Multiple" Grid.RowSpan="2">
            <ListView.ItemTemplate>
                <DataTemplate >
                    <Grid Height="110" Margin="6">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" Width="110" Height="110">
                            <Image Source="{Binding PlayerInfomation.Image.BitmapImage}" Stretch="UniformToFill"/>
                        </Border>
                        <StackPanel Grid.Column="1" VerticalAlignment="Top" Margin="10,0,0,0">
                            <TextBlock Text="{Binding PlayerInfomation.Name}" Style="{StaticResource TitleTextStyle}" TextWrapping="NoWrap"/>
                            <ListView ItemsSource="{Binding Resources}" Background="red" Width="300" Height="100">
                                <ListView.Resources>
                                    <!-- List-appropriate 70 pixel high item template as seen in the SearchResultsPage when Snapped -->
                                    <DataTemplate x:Key="DataTemplate1">
                                        <Grid Margin="6" Width="100">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Border Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" Margin="0,0,0,10" Width="40" Height="40">
                                                <Image Source="{Binding Image.BitmapImage}" Stretch="UniformToFill"/>
                                            </Border>
                                            <StackPanel Grid.Column="1" >
                                                <TextBlock Text="{Binding ResourceName}" Style="{StaticResource BodyTextStyle}" TextWrapping="NoWrap" />
                                                <TextBlock Text="{Binding Amount}" Style="{StaticResource BodyTextStyle}" Foreground="{StaticResource ApplicationSecondaryForegroundThemeBrush}" TextWrapping="NoWrap"/>
                                             
                                            </StackPanel>
                                        </Grid>
                                    </DataTemplate>

                                </ListView.Resources>
                                <ListView.ItemsPanel>
                                    <StaticResource ResourceKey="WarpGridItemsPanel"/>
                                </ListView.ItemsPanel>
                                <ListView.ItemTemplate>
                                    <StaticResource ResourceKey="DataTemplate1"/>
                                </ListView.ItemTemplate>

                            </ListView>
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <StackPanel Grid.Column="1" Grid.Row="0"  Background="#FF535353" Height="300" Width="300" Margin="30" VerticalAlignment="Bottom" HorizontalAlignment="Right"  >
            <cmd:CommandBinder.CommandBinder>
                <cmd:CommandBinder EventName="Drop" />
            </cmd:CommandBinder.CommandBinder>
        </StackPanel>
            <StackPanel Grid.Column="2" Grid.Row="0" Background="#FF535353" Height="300" Width="400" Margin="30"  VerticalAlignment="Bottom" HorizontalAlignment="Left" />
   <StackPanel Grid.Column="1" Grid.Row="1" Background="#FF535353" Height="300" Width="400" Margin="30"  VerticalAlignment="Top" HorizontalAlignment="Right" />
   <StackPanel Grid.Column="2" Grid.Row="1" Background="#FF535353" Height="300" Width="300" Margin="30" HorizontalAlignment="Left" VerticalAlignment="Top" />
            <!-- Details for selected item -->

    </Grid>
</common:LayoutAwarePage>
